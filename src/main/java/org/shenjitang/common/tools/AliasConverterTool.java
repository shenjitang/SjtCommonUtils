/*
 * AliasConverterTool.java
 *
 * Created on 2008年5月26日, 下午4:08
 */

package org.shenjitang.common.tools;

import org.shenjitang.common.AliasMng;
import org.apache.commons.io.FileUtils;

import java.awt.*;
import java.io.File;
import java.io.IOException;

/**
 *
 * @author  admin
 */
public class AliasConverterTool extends javax.swing.JFrame {
    FileDialog fileDialog;
    AliasMng aliasMng = new AliasMng();

    /** Creates new form AliasConverterTool */
    public AliasConverterTool() {
        initComponents();
        fileDialog = new FileDialog(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        mapFileTextField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sourceTextPane = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        destTextPane = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        mapMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        convertMenuItem = new javax.swing.JMenuItem();
        restoreMenuItem = new javax.swing.JMenuItem();
        g2yMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("文件:");

        mapFileTextField.setText("jTextField1");
        mapFileTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapFileTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(mapFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(mapFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(229, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Map", jPanel1);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createTitledBorder("源"));

        sourceTextPane.setPreferredSize(new java.awt.Dimension(400, 101));
        jScrollPane1.setViewportView(sourceTextPane);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("果"));

        destTextPane.setPreferredSize(new java.awt.Dimension(400, 101));
        jScrollPane2.setViewportView(destTextPane);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.PAGE_END);

        jTabbedPane1.addTab("Convert", jPanel2);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("文件");

        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(openMenuItem);

        mapMenuItem.setText("Map");
        mapMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(mapMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("动作");

        convertMenuItem.setText("转换");
        convertMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(convertMenuItem);

        restoreMenuItem.setText("反转");
        restoreMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restoreMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(restoreMenuItem);

        g2yMenuItem.setText("果->源");
        g2yMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g2yMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(g2yMenuItem);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void mapMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapMenuItemActionPerformed
// TODO add your handling code here:
    try {
        fileDialog.setVisible(true);
        String fileName = fileDialog.getDirectory() + fileDialog.getFile();
        mapFileTextField.setText(fileName);
        aliasMng.setMapFile(fileName);
    } catch (IOException ex) {
        ex.printStackTrace();
    }
    
}//GEN-LAST:event_mapMenuItemActionPerformed

private void mapFileTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapFileTextFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_mapFileTextFieldActionPerformed

private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
// TODO add your handling code here:
    fileDialog.setVisible(true);
    String fileName = fileDialog.getDirectory() + fileDialog.getFile();
    try {
        sourceTextPane.setText(FileUtils.readFileToString(new File(fileName), "UTF8"));
    } catch (IOException ex) {
        ex.printStackTrace();
    }

}//GEN-LAST:event_openMenuItemActionPerformed

private void convertMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertMenuItemActionPerformed
// TODO add your handling code here:
    String result = sourceTextPane.getText();//GEN-LAST:event_convertMenuItemActionPerformed
    if (result.startsWith("({") || result.startsWith("{")) { //is json
        result = aliasMng.jsonConvert(result);
    } else if (result.startsWith("<?xml")) { //isXml
        result = aliasMng.xmlConvert(result);
    }
    //String text = aliasMng.jsonConvert(sourceTextPane.getText());
    destTextPane.setText(result);
}

private void restoreMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreMenuItemActionPerformed
// TODO add your handling code here:
    String result = sourceTextPane.getText();//GEN-LAST:event_restoreMenuItemActionPerformed
    if (result.startsWith("({") || result.startsWith("{")) { //is json
        result = aliasMng.jsonRestore(result);
    } else if (result.startsWith("<?xml")) { //isXml
        result = aliasMng.xmlRestore(result);
    }
    //String text = aliasMng.jsonConvert(sourceTextPane.getText());
    destTextPane.setText(result);

    //String text = aliasMng.jsonRestore(sourceTextPane.getText());
    //destTextPane.setText(text);

}

private void g2yMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g2yMenuItemActionPerformed
// TODO add your handling code here:
    sourceTextPane.setText(destTextPane.getText());
    destTextPane.setText("");
}//GEN-LAST:event_g2yMenuItemActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AliasConverterTool().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem convertMenuItem;
    private javax.swing.JTextPane destTextPane;
    private javax.swing.JMenuItem g2yMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField mapFileTextField;
    private javax.swing.JMenuItem mapMenuItem;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem restoreMenuItem;
    private javax.swing.JTextPane sourceTextPane;
    // End of variables declaration//GEN-END:variables

}
